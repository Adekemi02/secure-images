name: CI/CD Pipeline

on:
  push:
    branches: ['main']
  pull_request:
    branches: [ "main" ]
    
permissions:
  contents: read

jobs:
  build:
    name: Build Python Application
    runs-on: Ubuntu-22.04
    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DEBUG: ${{ secrets.DEBUG }}
      DOCKER_IMAGE: adekhemie/tiredful-api
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip 
          pip install -r requirements.txt
          cd Tiredful-API
          python manage.py check
    
  oast-safety:
    runs-on: Ubuntu-22.04
    needs: build
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4

      - name: Pull safety tool and check for vulnerabilities
        run: docker run --rm -v $(pwd):/src hysnsec/safety check -r requirements.txt --json > safety-results.json
        continue-on-error: true

      - name: Save build output as artifact
        uses: actions/upload-artifact@v4
        with:
          name: Safety
          path: safety-results.json
        if: always()

  sast-snyk:
    runs-on: ubuntu-22.04
    needs: build
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4

      - name: Set up Snyk CLI
        uses: snyk/actions/setup@master

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Python modules
        run: pip install -r requirements.txt

      - name: Run snyk
        run: snyk code test --json > snyk-results.json
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        continue-on-error: true
    
      - name: Save test output as artifact
        uses: actions/upload-artifact@v4
        with:
          name: Snyk
          path: snyk-results.json
        if: always()

  sast-hadolint:
    runs-on: ubuntu-22.04
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Hadolint
        uses: hadolint/hadolint-action@v3.1.0        
        with:
          dockerfile: Dockerfile
          failure-threshold: warning
          format: json
          output-file: hadolint.json
        continue-on-error: true

      - uses: actions/upload-artifact@v4
        with:
          name: Hadolint
          path: hadolint.json
        if: always()

  build-image:
    runs-on: ubuntu-22.04
    needs: sast-hadolint
    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4

      # - name: Set up Python
      #   uses: actions/setup-python@v4
      #   with:
      #     python-version: ${{ matrix.python-version }}  
          
      # - name: Install Python modules
      #   run: pip install -r requirements.txt
    
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push image to Dockerhub
        run: | 
          docker build -t adekhemie/tiredful-api:latest .
          docker push adekhemie/tiredful-api:latest

      - name: Scan with Docker Scout
        id: docker-scout
        uses: docker/scout-action@v1
        with:
          command: cves,recommendations
          to-latest: true
          ignore-base: false
          ignore-unchanged: true
          only-fixed: true
          sarif-file: scout-output.json
        continue-on-error: true

  image-scan:
    runs-on: ubuntu-22.04
    needs: build-image
    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}  
          
      - name: Install Python modules
        run: pip install -r requirements.txt

      - name: Set up Snyk CLI
        uses: snyk/actions/setup@master

      - name: Scan Docker image with Snyk
        run: snyk container test adekhemie/tiredful-api:latest --json > snyk-container-results.json
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        continue-on-error: true

      - name: Save integration output
        uses: actions/upload-artifact@v4
        with:
          name: Snyk container
          path: snyk-container-results.json
        if: always()

  deploy:
    runs-on: ubuntu-22.04
    needs: build-image
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4

      - name: Set up kind and Helm
        uses: helm/kind-action@v1.4.0

      - name: Create kind Cluster
        run: kind create cluster --name tiredful-cluster

      - name: Load Docker Image into kind
        run: |
          sudo docker pull adekhemie/tiredful-api
          sudo kind load docker-image adekhemie/tiredful-api:latest --name tiredful-cluster

      - name: Deploy application to KinD
        run: |
          kubectl apply -f ./deployment.yml
          kubectl apply -f ./service.yml