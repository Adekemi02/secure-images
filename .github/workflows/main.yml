name: CI/CD Pipeline

on:
  push:
    branches: ['main']
  pull_request:
    branches: [ "main" ]
    
permissions:
  contents: read

jobs:
  build:
    name: Build Python Application
    runs-on: Ubuntu-22.04
    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DEBUG: ${{ secrets.DEBUG }}
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip 
          pip install -r requirements.txt
          cd Tiredful-API
          python manage.py check
    
  safety-check:
    runs-on: Ubuntu-22.04
    needs: build
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4

      - name: Pull safety tool and check for vulnerabilities
        run: docker run --rm -v $(pwd):/src hysnsec/safety check -r requirements.txt --json > safety-results.json

      - name: Save build output
        uses: actions/upload-artifact@v4
        with:
          name: Safety
          path: safety-results.json
        if: always()
        continue-on-error: true

  test:
    runs-on: ubuntu-22.04
    needs: safety-check
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4

      - name: Set up Snyk CLI
        uses: snyk/actions/setup@master

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Python modules
        run: pip install -r requirements.txt

      - name: Run snyk
        run: snyk code test --json > snyk-results.json
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
    
      - name: Save test output
        uses: actions/upload-artifact@v4
        with:
          name: Snyk
          path: snyk-results.json
        if: always()
        continue-on-error: true

  integration:
    runs-on: ubuntu-22.04
    needs: test
    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4

      - name: Set up Snyk CLI
        uses: snyk/actions/setup@master

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}      

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: adekhemie/tiredful-api

      - name: Log Docker metadata
        run: |
          echo "Tags: ${{ steps.meta.outputs.tags }}"
          echo "Labels: ${{ steps.meta.outputs.labels }}"

      - name: Build and push image to Dockerhub
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Scan Docker image
        run: snyk container test --docker adekhemie/tiredful-api --json > snyk-container-results.json
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        continue-on-error: true

      - name: Save integration output
        uses: actions/upload-artifact@v4
        with:
          name: Snyk container
          path: snyk-container-results.json
        if: always()

  deploy:
    runs-on: ubuntu-22.04
    needs: integration
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4

      - name: Set up kind and Helm
        uses: helm/kind-action@v1.4.0

      - name: Create kind Cluster
        run: kind create cluster --name tiredful-cluster

      - name: Load Docker Image into kind
        run: |
          sudo docker pull adekhemie/tiredful-api
          sudo kind load docker-image adekhemie/tiredful-api:latest --name tiredful-cluster

      - name: Deploy application to KinD
        run: |
          kubectl apply -f ./deployment.yml
          kubectl apply -f ./service.yml